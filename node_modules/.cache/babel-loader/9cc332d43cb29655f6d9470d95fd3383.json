{"ast":null,"code":"var _jsxFileName = \"/home/dev/Bureau/Armel/Perfect/Prod/perfect-events_front/src/components/topNavigation.js\";\nimport React, { Component } from 'react';\nimport { MDBNavbar, MDBNavbarBrand, MDBNavbarNav, MDBNavbarToggler, MDBCollapse, MDBNavItem, MDBNavLink, MDBIcon } from 'mdbreact';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\n\nclass TopNavigation extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      collapse: true\n    };\n\n    this.renderRedirect = () => {\n      if (localStorage.getItem('login') == 'false') {\n        return React.createElement(Redirect, {\n          to: \"/login\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 19\n          },\n          __self: this\n        });\n      } else {\n        console.log('test');\n      }\n    };\n\n    this.onClick = () => {\n      this.setState({\n        collapse: !this.state.collapse\n      });\n    };\n\n    this.toggle = () => {\n      this.setState({\n        dropdownOpen: !this.state.dropdownOpen\n      });\n    };\n\n    this.deconnection = this.deconnection.bind(this);\n    this.renderRedirect = this.renderRedirect.bind(this);\n  }\n\n  deconnection(e) {\n    console.log('local deconnection: ', localStorage.getItem('login'));\n    const action = {\n      type: \"DECONNECT\",\n      value: e\n    };\n    this.props.dispatch(action);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"container-fluid topbar-fixed\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(MDBNavbar, {\n      id: \"Totalhome\",\n      dark: true,\n      expand: \"md\",\n      scrolling: true,\n      className: \"position-fixed\",\n      style: {\n        position: 'absolute',\n        zIndex: '5',\n        float: 'left',\n        height: '100px',\n        width: '87%',\n        marginTop: '-6%',\n        marginLeft: '10%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(MDBNavbarBrand, {\n      className: \"bonjour\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, this.renderRedirect(), React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"Bonjour \", localStorage.getItem('user'))), React.createElement(MDBNavbarToggler, {\n      image: \"../images/hamburger3.gif\",\n      onClick: () => this.onClick(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }), React.createElement(MDBCollapse, {\n      id: \"navbarCollapse\",\n      isOpen: this.state.collapse,\n      navbar: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(MDBNavbarNav, {\n      right: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(MDBNavItem, {\n      className: \"item\",\n      onClick: () => {\n        this.deconnection();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(MDBNavLink, {\n      rel: \"noopener noreferrer\",\n      className: \"nav-link Ripple-parent accueil\",\n      href: \"/login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(MDBIcon, {\n      icon: \"sign-out-alt\",\n      className: \"mr-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }), \"Deconnexion\"))))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    client: state\n  };\n};\n\nexport default connect(mapStateToProps)(TopNavigation);","map":{"version":3,"sources":["/home/dev/Bureau/Armel/Perfect/Prod/perfect-events_front/src/components/topNavigation.js"],"names":["React","Component","MDBNavbar","MDBNavbarBrand","MDBNavbarNav","MDBNavbarToggler","MDBCollapse","MDBNavItem","MDBNavLink","MDBIcon","connect","Redirect","TopNavigation","constructor","props","state","collapse","renderRedirect","localStorage","getItem","console","log","onClick","setState","toggle","dropdownOpen","deconnection","bind","e","action","type","value","dispatch","render","position","zIndex","float","height","width","marginTop","marginLeft","mapStateToProps","client"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { MDBNavbar, MDBNavbarBrand, MDBNavbarNav, MDBNavbarToggler, MDBCollapse, MDBNavItem, MDBNavLink, MDBIcon } from 'mdbreact';\nimport { connect } from 'react-redux'\nimport { Redirect } from 'react-router-dom'\n\nclass TopNavigation extends Component {\n\n    constructor(props) {\n        super(props);\n        this.deconnection = this.deconnection.bind(this)\n        this.renderRedirect = this.renderRedirect.bind(this)\n    }\n    state = {\n        collapse: true\n    }\n\n    renderRedirect = () => {\n        if (localStorage.getItem('login') == 'false') {\n            return <Redirect to='/login' />\n        } else {\n            console.log('test');\n        }\n    }\n\n    deconnection(e) {\n        console.log('local deconnection: ', localStorage.getItem('login'));\n        const action = { type: \"DECONNECT\", value: e }\n        this.props.dispatch(action)\n    }\n\n    onClick = () => {\n        this.setState({\n            collapse: !this.state.collapse,\n        });\n    }\n\n    toggle = () => {\n        this.setState({\n            dropdownOpen: !this.state.dropdownOpen\n        });\n    }\n\n    render() {\n        return (\n            <div className='container-fluid topbar-fixed'>\n\n                <MDBNavbar id=\"Totalhome\"\n                    dark\n                    expand=\"md\"\n                    scrolling\n                    className='position-fixed'\n                    style={{ position: 'absolute', zIndex: '5', float: 'left', height: '100px', width: '87%', marginTop: '-6%',  marginLeft: '10%' }}\n                >\n\n                    <MDBNavbarBrand className=\"bonjour\">\n                        {this.renderRedirect()}\n                        <strong>Bonjour {localStorage.getItem('user')}</strong>\n                    </MDBNavbarBrand>\n                    <MDBNavbarToggler\n                        image=\"../images/hamburger3.gif\"\n                        onClick={() => this.onClick()}\n                    />\n                    <MDBCollapse\n                        id=\"navbarCollapse\"\n                        isOpen={this.state.collapse}\n                        navbar\n                    >\n\n                        <MDBNavbarNav right>\n                            <MDBNavItem className='item' onClick={() => { this.deconnection() }}>\n                                <MDBNavLink rel=\"noopener noreferrer\" className=\"nav-link Ripple-parent accueil\" href=\"/login\"><MDBIcon icon=\"sign-out-alt\" className=\"mr-3\" />Deconnexion</MDBNavLink>\n                            </MDBNavItem>\n\n                        </MDBNavbarNav>\n                    </MDBCollapse>\n\n                </MDBNavbar>\n            </div>\n        );\n    }\n}\nconst mapStateToProps = (state) => {\n    return {\n        client: state\n    }\n}\nexport default connect(mapStateToProps)(TopNavigation);"]},"metadata":{},"sourceType":"module"}