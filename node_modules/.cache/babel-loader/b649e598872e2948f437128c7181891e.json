{"ast":null,"code":"var _jsxFileName = \"/home/dev/Bureau/Armel/Perfect/front/src/components/categories/tete.jsx\";\n\nclass Home extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.toggle = () => {\n      this.setState({\n        modal: !this.state.modal\n      });\n    };\n\n    this.toggleCollapse = collapseID => () => this.setState(prevState => ({\n      collapseID: prevState.collapseID !== collapseID ? collapseID : \"\"\n    }));\n\n    this.renderRedirect = () => {\n      if (this.state.redirect) {\n        var url = '/service/' + this.state._id;\n        return React.createElement(Redirect, {\n          to: url,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 25\n          },\n          __self: this\n        });\n      }\n    };\n\n    this.state = {\n      collapseID: \"\",\n      comment: [],\n      modal: ''\n    };\n  }\n\n  componentDidMount() {\n    axios.get(\"http://localhost:8080/service\").then(res => {\n      var tab = [];\n\n      for (let i = 0; i < res.data.length; i++) {\n        if (res.data[i].active == true) {\n          tab.push(res.data[i]);\n        }\n      }\n\n      this.setState({\n        comment: tab\n      });\n    });\n  } // componentWillUpdate() {\n  //     axios.get(\"http://localhost:8080/service\").then(res => {\n  //         console.log('res comment: ', res.data)\n  //         this.setState({ comment: res.data })\n  //         console.log('comment: ', this.state.comment)\n  //     })\n  // }\n\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, \"TETE\");\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    client: state\n  };\n};\n\nexport default connect(mapStateToProps)(Home);","map":{"version":3,"sources":["/home/dev/Bureau/Armel/Perfect/front/src/components/categories/tete.jsx"],"names":["Home","React","Component","constructor","props","toggle","setState","modal","state","toggleCollapse","collapseID","prevState","renderRedirect","redirect","url","_id","comment","componentDidMount","axios","get","then","res","tab","i","data","length","active","push","render","mapStateToProps","client","connect"],"mappings":";;AAAA,MAAMA,IAAN,SAAmBC,KAAK,CAACC,SAAzB,CAAmC;AAC/BC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SASnBC,MATmB,GASV,MAAM;AACX,WAAKC,QAAL,CAAc;AACVC,QAAAA,KAAK,EAAE,CAAC,KAAKC,KAAL,CAAWD;AADT,OAAd;AAGH,KAbkB;;AAAA,SAenBE,cAfmB,GAeFC,UAAU,IAAI,MAC3B,KAAKJ,QAAL,CAAcK,SAAS,KAAK;AACxBD,MAAAA,UAAU,EAAEC,SAAS,CAACD,UAAV,KAAyBA,UAAzB,GAAsCA,UAAtC,GAAmD;AADvC,KAAL,CAAvB,CAhBe;;AAAA,SAoBnBE,cApBmB,GAoBF,MAAM;AACnB,UAAI,KAAKJ,KAAL,CAAWK,QAAf,EAAyB;AACrB,YAAIC,GAAG,GAAG,cAAc,KAAKN,KAAL,CAAWO,GAAnC;AACA,eAAO,oBAAC,QAAD;AAAU,UAAA,EAAE,EAAED,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACH;AACJ,KAzBkB;;AAEf,SAAKN,KAAL,GAAa;AACTE,MAAAA,UAAU,EAAE,EADH;AAETM,MAAAA,OAAO,EAAE,EAFA;AAGTT,MAAAA,KAAK,EAAE;AAHE,KAAb;AAKH;;AAoBDU,EAAAA,iBAAiB,GAAG;AAChBC,IAAAA,KAAK,CAACC,GAAN,CAAU,+BAAV,EAA2CC,IAA3C,CAAgDC,GAAG,IAAI;AACnD,UAAIC,GAAG,GAAG,EAAV;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,GAAG,CAACG,IAAJ,CAASC,MAA7B,EAAqCF,CAAC,EAAtC,EAA0C;AACtC,YAAIF,GAAG,CAACG,IAAJ,CAASD,CAAT,EAAYG,MAAZ,IAAsB,IAA1B,EAAgC;AAC5BJ,UAAAA,GAAG,CAACK,IAAJ,CAASN,GAAG,CAACG,IAAJ,CAASD,CAAT,CAAT;AACH;AACJ;;AACD,WAAKjB,QAAL,CAAc;AAAEU,QAAAA,OAAO,EAAEM;AAAX,OAAd;AACH,KARD;AASH,GAtC8B,CAwC/B;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEAM,EAAAA,MAAM,GAAG;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ;AAIH;;AArD8B;;AAyDnC,MAAMC,eAAe,GAAIrB,KAAD,IAAW;AAC/B,SAAO;AACHsB,IAAAA,MAAM,EAAEtB;AADL,GAAP;AAGH,CAJD;;AAKA,eAAeuB,OAAO,CAACF,eAAD,CAAP,CAAyB7B,IAAzB,CAAf","sourcesContent":["class Home extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            collapseID: \"\",\n            comment: [],\n            modal: '',\n        };\n    }\n\n    toggle = () => {\n        this.setState({\n            modal: !this.state.modal,\n        });\n    }\n\n    toggleCollapse = collapseID => () =>\n        this.setState(prevState => ({\n            collapseID: prevState.collapseID !== collapseID ? collapseID : \"\"\n        }));\n\n    renderRedirect = () => {\n        if (this.state.redirect) {\n            var url = '/service/' + this.state._id\n            return <Redirect to={url} />\n        }\n    }\n\n    componentDidMount() {\n        axios.get(\"http://localhost:8080/service\").then(res => {\n            var tab = []\n            for (let i = 0; i < res.data.length; i++) {\n                if (res.data[i].active == true) {\n                    tab.push(res.data[i])\n                }\n            }\n            this.setState({ comment: tab })\n        })\n    }\n\n    // componentWillUpdate() {\n    //     axios.get(\"http://localhost:8080/service\").then(res => {\n    //         console.log('res comment: ', res.data)\n    //         this.setState({ comment: res.data })\n    //         console.log('comment: ', this.state.comment)\n    //     })\n    // }\n\n    render() {\n        return (\n            <div>TETE</div>\n\n        )\n    }\n}\n\n\nconst mapStateToProps = (state) => {\n    return {\n        client: state\n    }\n}\nexport default connect(mapStateToProps)(Home)\n"]},"metadata":{},"sourceType":"module"}