{"ast":null,"code":"var _jsxFileName = \"/home/dev/Bureau/Armel/Perfect/Local/front/src/components/article.jsx\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\nimport { MDBContainer, MDBInput, MDBBtn, MDBModal, MDBModalBody, MDBModalHeader, MDBModalFooter } from 'mdbreact';\nimport { confirmAlert } from 'react-confirm-alert'; // Import\n\nimport './article.css';\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\n\nclass Article extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.toggle = () => {\n      this.setState({\n        modal: !this.state.modal\n      });\n    };\n\n    this.toggle = () => {\n      this.handleUploadImage();\n      this.setState({\n        modal: !this.state.modal\n      });\n    };\n\n    this.state = {\n      titre: '',\n      description: '',\n      prix: '',\n      image: \"\",\n      image1: \"\",\n      image2: \"\",\n      comment: [],\n      date: '',\n      active: true,\n      modal: false\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.toggle = this.toggle.bind(this);\n    this.handleUploadImage = this.handleUploadImage.bind(this);\n  }\n\n  handleChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n\n  handleUploadImage(ev) {\n    const data = new FormData();\n    data.append('image', this.uploadInput.files[0]);\n    data.append('image1', this.uploadInput1.files[0]);\n    data.append('image2', this.uploadInput2.files[0]);\n    data.append('titre', this.state.titre);\n    data.append('description', this.state.description);\n    data.append('categorie', this.state.categorie);\n    data.append('utilisateur', localStorage.getItem('id'));\n    data.append('active', this.state.active); // fetch('https://tsiorytahback.herokuapp.com/profil/' + localStorage.getItem('atelier'), {\n\n    fetch('http://localhost:8080/service/' + localStorage.getItem('serviceUpdate'), {\n      method: 'PUT',\n      body: data\n    }).then(response => {\n      response.json().then(body => {\n        this.setState({\n          image: \"http://localhost:8080/service/\".concat(body.image) + localStorage.getItem('serviceUpdate') + '.jpg',\n          image1: \"http://localhost:8080/service/\".concat(body.image1) + localStorage.getItem('serviceUpdate') + '.jpg',\n          image2: \"http://localhost:8080/service/\".concat(body.image2) + localStorage.getItem('serviceUpdate') + '.jpg' // image: `https://tsiorytahback.herokuapp.com/profil/${body.titre}` + localStorage.getItem('atelier') + '.jpg',\n\n        });\n      });\n      this.componentDidMount();\n    });\n  }\n\n  componentDidMount() {\n    var tab = [];\n    console.log('props: ', this.props);\n    axios.get(\"http://localhost:8080/service\").then(res => {\n      console.log('res comment: ', res.data);\n\n      for (let i = 0; i < res.data.length; i++) {\n        if (localStorage.getItem('id') == res.data[i].utilisateur) {\n          tab.push(res.data[i]);\n        }\n      }\n\n      this.setState({\n        comment: tab\n      });\n      console.log('comment: ', this.state.comment);\n    });\n  }\n\n  render() {\n    return (// // AJOUT\n      React.createElement(\"div\", {\n        className: \"container-fluid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(\"table\", {\n        className: \"table container-fluid\",\n        style: {\n          marginLeft: '10%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, this.state.comment.length > 0 ? this.state.comment.sort((a, b) => {\n        return b._id - a._id;\n      }).map((user, _id) => React.createElement(\"tr\", {\n        key: _id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        class: \"card-img-top img-thumbnail image\",\n        src: \"http://localhost:8080/service/\" + user.image,\n        alt: user.titre,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        class: \"card-img-top img-thumbnail image1\",\n        src: \"http://localhost:8080/service/\" + user.image1,\n        alt: user.titre,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      })), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        class: \"card-img-top img-thumbnail image1\",\n        src: \"http://localhost:8080/service/\" + user.image2,\n        alt: user.titre,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }))), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, user.titre), React.createElement(\"p\", {\n        id: \"description\",\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, \"Lorem ipsum dolor sit amet consectetur adipisicing elit. Quos rerum itaque numquam, porro autem at maxime? Nemo porro ipsa tempore voluptas ullam, nam itaque doloremque, distinctio obcaecati eaque cumque quo.\")), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, user.active == true ? React.createElement(MDBBtn, {\n        onClick: e => {\n          // e.preventDefault()\n          console.log('active: ', user.active); // axios.get('https://tsiorytahback.herokuapp.com/desactivation/' + user._id)\n\n          axios.get('http://localhost:8080/desactivation/' + user._id).then(res => {\n            console.log('desactivation ok', res);\n            console.log('active: ', user.active);\n            {\n              this.componentDidMount();\n            }\n          }).catch(res => {\n            console.log('erreur desactivation: ', res);\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, \"Desactiver\") : React.createElement(MDBBtn, {\n        onClick: e => {\n          // e.preventDefault()\n          // axios.get('https://tsiorytahback.herokuapp.com/desactivation/' + user._id)\n          axios.get('http://localhost:8080/activation/' + user._id).then(res => {\n            console.log('activation ok', res);\n            console.log('active: ', user.active);\n            {\n              this.componentDidMount();\n            }\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, \"Activer\")), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"btn btn-success\",\n        onClick: () => {\n          localStorage.setItem('atelier', user._id);\n          confirmAlert({\n            customUI: ({\n              onClose\n            }) => {\n              return React.createElement(\"form\", {\n                id: \"ID_FORMULAIRE\",\n                key: _id,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 189\n                },\n                __self: this\n              }, localStorage.setItem('serviceUpdate', user._id), React.createElement(\"div\", {\n                className: \"custom-ui\",\n                id: \"popup\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 191\n                },\n                __self: this\n              }, React.createElement(\"div\", {\n                className: \"form-group\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 192\n                },\n                __self: this\n              }, React.createElement(\"div\", {\n                className: \"container\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 193\n                },\n                __self: this\n              }, React.createElement(\"div\", {\n                className: \"row\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 194\n                },\n                __self: this\n              }, React.createElement(\"div\", {\n                className: \"col-md-9\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 195\n                },\n                __self: this\n              }), React.createElement(\"div\", {\n                className: \"col-md-3 custom-control custom-switch\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 196\n                },\n                __self: this\n              }, React.createElement(\"input\", {\n                ref: \"box1\",\n                name: \"active\",\n                type: \"checkbox\",\n                class: \"custom-control-input\",\n                id: \"customSwitches1\",\n                onClick: () => {\n                  this.setState({\n                    active: true\n                  });\n                },\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 197\n                },\n                __self: this\n              }), React.createElement(\"label\", {\n                class: \"custom-control-label\",\n                for: \"customSwitches1\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 200\n                },\n                __self: this\n              }, \"Publier\")))), React.createElement(\"div\", {\n                className: \"container\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 204\n                },\n                __self: this\n              }, React.createElement(MDBContainer, {\n                isOpen: this.state.modal,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 205\n                },\n                __self: this\n              }, React.createElement(\"div\", {\n                className: \"row\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 206\n                },\n                __self: this\n              }, React.createElement(\"div\", {\n                className: \"col-md-6\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 207\n                },\n                __self: this\n              }, React.createElement(\"select\", {\n                class: \"form-control form-control-lg\",\n                id: \"type\",\n                name: \"categorie\",\n                value: this.state.value,\n                onChange: this.handleChange,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 208\n                },\n                __self: this\n              }, React.createElement(\"label\", {\n                for: \"type\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 209\n                },\n                __self: this\n              }, \"Cat\\xE9gorie\"), React.createElement(\"option\", {\n                value: \"\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 210\n                },\n                __self: this\n              }, \"Choisir le Type de service (Obligatoire)\"), React.createElement(\"option\", {\n                value: \"Tete\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 211\n                },\n                __self: this\n              }, \"T\\xEAte de cort\\xE8ge\"), React.createElement(\"option\", {\n                value: \"Salle\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 212\n                },\n                __self: this\n              }, \"Salle de r\\xE9ception\"), React.createElement(\"option\", {\n                value: \"Deco\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 213\n                },\n                __self: this\n              }, \"D\\xE9corations\"), React.createElement(\"option\", {\n                value: \"Trait\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 214\n                },\n                __self: this\n              }, \"Service traiteur\"), React.createElement(\"option\", {\n                value: \"Photo\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 215\n                },\n                __self: this\n              }, \"Photographe/Vid\\xE9aste\")), \"                                                                                                \", React.createElement(MDBInput, {\n                label: user.titre,\n                id: \"un\",\n                type: \"text\",\n                className: \"input black-textform-control\",\n                id: \"inputGroup-sizing-default\",\n                name: \"titre\",\n                value: this.state.value,\n                onChange: this.handleChange,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 216\n                },\n                __self: this\n              }), React.createElement(MDBInput, {\n                label: user.description,\n                id: \"ml\",\n                type: \"textarea\",\n                rows: \"2\",\n                className: \"input black-text\",\n                name: \"description\",\n                value: this.state.value,\n                onChange: this.handleChange,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 217\n                },\n                __self: this\n              })), React.createElement(\"div\", {\n                className: \"col-md-6\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 219\n                },\n                __self: this\n              }, React.createElement(\"center\", {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 220\n                },\n                __self: this\n              }, React.createElement(\"input\", {\n                className: \"btn btn-dark\",\n                ref: ref => {\n                  this.uploadInput = ref;\n                },\n                type: \"file\",\n                name: \"image\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 221\n                },\n                __self: this\n              }), React.createElement(\"br\", {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 221\n                },\n                __self: this\n              }), React.createElement(\"input\", {\n                className: \"btn btn-dark\",\n                ref: ref1 => {\n                  this.uploadInput1 = ref1;\n                },\n                type: \"file\",\n                name: \"image1\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 222\n                },\n                __self: this\n              }), React.createElement(\"br\", {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 222\n                },\n                __self: this\n              }), React.createElement(\"input\", {\n                className: \"btn btn-dark\",\n                ref: ref2 => {\n                  this.uploadInput2 = ref2;\n                },\n                type: \"file\",\n                name: \"image2\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 223\n                },\n                __self: this\n              }), React.createElement(\"br\", {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 223\n                },\n                __self: this\n              }), React.createElement(MDBBtn, {\n                className: \"button\",\n                id: \"boutton\",\n                onClick: () => {\n                  this.toggle();\n                  onClose();\n                },\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 224\n                },\n                __self: this\n              }, \"Confirmer\"), React.createElement(\"button\", {\n                className: \"btn btn-dark\",\n                onClick: onClose,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 228\n                },\n                __self: this\n              }, \"Annuler\")))))))));\n            }\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }, \"Edit\")))) : React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        colSpan: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248\n        },\n        __self: this\n      })))))\n    );\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    listeArticle: state\n  };\n};\n\nexport default connect(mapStateToProps)(Article);","map":{"version":3,"sources":["/home/dev/Bureau/Armel/Perfect/Local/front/src/components/article.jsx"],"names":["React","Component","connect","axios","MDBContainer","MDBInput","MDBBtn","MDBModal","MDBModalBody","MDBModalHeader","MDBModalFooter","confirmAlert","Article","constructor","props","toggle","setState","modal","state","handleUploadImage","titre","description","prix","image","image1","image2","comment","date","active","handleChange","bind","e","target","name","value","ev","data","FormData","append","uploadInput","files","uploadInput1","uploadInput2","categorie","localStorage","getItem","fetch","method","body","then","response","json","componentDidMount","tab","console","log","get","res","i","length","utilisateur","push","render","marginLeft","sort","a","b","_id","map","user","catch","setItem","customUI","onClose","ref","ref1","ref2","mapStateToProps","listeArticle"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux'\nimport axios from 'axios'\nimport { MDBContainer, MDBInput, MDBBtn, MDBModal, MDBModalBody, MDBModalHeader, MDBModalFooter } from 'mdbreact';\nimport { confirmAlert } from 'react-confirm-alert'; // Import\nimport './article.css'\nimport 'react-confirm-alert/src/react-confirm-alert.css' // Import css\n\nclass Article extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            titre: '',\n            description: '',\n            prix: '',\n            image: \"\",\n            image1: \"\",\n            image2: \"\",\n            comment: [],\n            date: '',\n            active: true,\n            modal: false,\n        };\n        this.handleChange = this.handleChange.bind(this)\n        this.toggle = this.toggle.bind(this)\n        this.handleUploadImage = this.handleUploadImage.bind(this)\n    }\n\n    handleChange(e) {\n        this.setState({ [e.target.name]: e.target.value })\n    }\n\n    toggle = () => {\n        this.setState({\n            modal: !this.state.modal,\n        });\n    }\n\n    handleUploadImage(ev) {\n        const data = new FormData();\n        data.append('image', this.uploadInput.files[0]);\n        data.append('image1', this.uploadInput1.files[0]);\n        data.append('image2', this.uploadInput2.files[0]);\n        data.append('titre', this.state.titre);\n        data.append('description', this.state.description);\n        data.append('categorie', this.state.categorie);\n        data.append('utilisateur', localStorage.getItem('id'))\n        data.append('active', this.state.active)\n\n        // fetch('https://tsiorytahback.herokuapp.com/profil/' + localStorage.getItem('atelier'), {\n        fetch('http://localhost:8080/service/' + localStorage.getItem('serviceUpdate'), {\n            method: 'PUT',\n            body: data,\n        }).then((response) => {\n            response.json().then((body) => {\n                this.setState({\n                    image: `http://localhost:8080/service/${body.image}`+ localStorage.getItem('serviceUpdate') + '.jpg',\n                    image1: `http://localhost:8080/service/${body.image1}`+ localStorage.getItem('serviceUpdate') + '.jpg',\n                    image2: `http://localhost:8080/service/${body.image2}`+ localStorage.getItem('serviceUpdate') + '.jpg',\n                    // image: `https://tsiorytahback.herokuapp.com/profil/${body.titre}` + localStorage.getItem('atelier') + '.jpg',\n                });\n            });\n            this.componentDidMount()\n        });\n    }\n\n    toggle = () => {\n        this.handleUploadImage()\n        this.setState({\n            modal: !this.state.modal,\n        });\n    }\n\n    componentDidMount() {\n        var tab = []\n        console.log('props: ', this.props)\n        axios.get(\"http://localhost:8080/service\").then(res => {\n            console.log('res comment: ', res.data)\n            for (let i = 0; i < res.data.length; i++) {\n                if (localStorage.getItem('id') == res.data[i].utilisateur) {\n                    tab.push(res.data[i])\n                }\n            }\n            this.setState({ comment: tab })\n            console.log('comment: ', this.state.comment)\n        })\n    }\n\n    render() {\n        return (\n            // // AJOUT\n            <div className='container-fluid'>\n                {/* <center onSubmit={event => {\n                    event.preventDefault()\n                }}> */}\n                <table className=\"table container-fluid\" style={{ marginLeft: '10%' }}>\n                    <tbody>\n                        {(this.state.comment.length > 0) ? (\n                            this.state.comment.sort((a, b) => { return b._id - a._id }).map((user, _id) => (\n                                <tr key={_id}>\n                                    <td>\n                                        <img class=\"card-img-top img-thumbnail image\" src={\"http://localhost:8080/service/\" + user.image} alt={user.titre} />\n                                        <td>\n                                            <img class=\"card-img-top img-thumbnail image1\" src={\"http://localhost:8080/service/\" + user.image1} alt={user.titre} />\n                                        </td>\n                                        <td>\n                                            <img class=\"card-img-top img-thumbnail image1\" src={\"http://localhost:8080/service/\" + user.image2} alt={user.titre} />\n                                        </td>\n                                    </td>\n                                    <td>\n                                        <strong>{user.titre}</strong>\n                                        <p id=\"description\" onChange={this.handleChange}>Lorem ipsum dolor sit amet consectetur adipisicing elit. Quos rerum itaque numquam, porro autem at maxime? Nemo porro ipsa tempore voluptas ullam, nam itaque doloremque, distinctio obcaecati eaque cumque quo.</p>\n                                    </td>\n                                    <td>\n                                        {/* (DES)ACTIVATION */}\n                                        {(user.active == true) ?\n                                            (<MDBBtn onClick={(e) => {\n                                                // e.preventDefault()\n                                                console.log('active: ', user.active);\n\n                                                // axios.get('https://tsiorytahback.herokuapp.com/desactivation/' + user._id)\n                                                axios.get('http://localhost:8080/desactivation/' + user._id)\n                                                    .then(res => {\n                                                        console.log('desactivation ok', res);\n                                                        console.log('active: ', user.active);\n                                                        { this.componentDidMount() }\n                                                    })\n                                                    .catch(res => {\n                                                        console.log('erreur desactivation: ', res);\n\n                                                    })\n                                            }}>Desactiver</MDBBtn>) : (<MDBBtn onClick={(e) => {\n                                                // e.preventDefault()\n                                                // axios.get('https://tsiorytahback.herokuapp.com/desactivation/' + user._id)\n                                                axios.get('http://localhost:8080/activation/' + user._id)\n                                                    .then(res => {\n                                                        console.log('activation ok', res);\n                                                        console.log('active: ', user.active);\n                                                        { this.componentDidMount() }\n                                                    })\n                                            }}>Activer</MDBBtn>)\n                                        }\n                                    </td>\n\n                                    <td>\n                                        {/* SUPPRESSION */}\n                                        {/* <button className=\"btn btn-danger\"\n                                            onClick={() => {\n                                                confirmAlert({\n                                                    customUI: ({ onClose }) => {\n                                                        return (\n                                                            <center>\n                                                                <div className=\"custom-ui\" id=\"popup\">\n                                                                    <table>\n                                                                        <td>\n                                                                            <img class=\"card-img-top img-thumbnail sary\" src={\"http://localhost:8080/service/\" + user.image} alt={user.titre} /><br />\n                                                                        </td>\n                                                                        <td>\n                                                                            <h6 className=\"text-pop\">Suppression du Produit: </h6><br />\n                                                                            <h6 className=\"text-pop\">{user.titre}</h6><br />\n                                                                        </td>\n                                                                    </table>\n                                                                    <button className=\"btn btn-dark\"\n                                                                        onClick={() => {\n                                                                            // props.deleteUser(user.id); //Appel de la fonction deleteUser App.js\n                                                                            onClose();\n                                                                        }}\n                                                                    >\n                                                                        OUI\n                                                            </button><a>&nbsp;&nbsp;</a>\n                                                                    <button className=\"btn btn-dark\" onClick={onClose}>NON</button>\n                                                                </div>\n                                                            </center>\n                                                        );\n                                                    }\n                                                })\n                                            }\n                                            }\n                                        >DELETE</button>\n                                        <a>&nbsp;</a> */}\n                                        {/* MODIFICATION */}\n                                        <button className=\"btn btn-success\"\n                                            onClick={() => {\n                                                localStorage.setItem('atelier', user._id)\n                                                confirmAlert({\n                                                    customUI: ({ onClose }) => {\n                                                        return (\n                                                            <form id='ID_FORMULAIRE' key={_id}>\n                                                                {localStorage.setItem('serviceUpdate', user._id)}\n                                                                <div className=\"custom-ui\" id=\"popup\">\n                                                                    <div className=\"form-group\">\n                                                                        <div className='container'>\n                                                                            <div className='row'>\n                                                                                <div className='col-md-9'></div>\n                                                                                <div className='col-md-3 custom-control custom-switch'>\n                                                                                    <input ref=\"box1\" name=\"active\" type=\"checkbox\" class=\"custom-control-input\" id=\"customSwitches1\" onClick={() => {\n                                                                                        this.setState({ active: true })\n                                                                                    }} />\n                                                                                    <label class=\"custom-control-label\" for=\"customSwitches1\">Publier</label>\n                                                                                </div>\n                                                                            </div>\n                                                                        </div>\n                                                                        <div className='container'>\n                                                                            <MDBContainer isOpen={this.state.modal}>\n                                                                                <div className='row'>\n                                                                                    <div className='col-md-6'>\n                                                                                        <select class=\"form-control form-control-lg\" id='type' name=\"categorie\" value={this.state.value} onChange={this.handleChange}>\n                                                                                            <label for='type'>Catégorie</label>\n                                                                                            <option value=''>Choisir le Type de service (Obligatoire)</option>\n                                                                                            <option value='Tete'>Tête de cortège</option>\n                                                                                            <option value='Salle'>Salle de réception</option>\n                                                                                            <option value='Deco'>Décorations</option>\n                                                                                            <option value='Trait'>Service traiteur</option>\n                                                                                            <option value='Photo'>Photographe/Vidéaste</option>\n                                                                                        </select>                                                                                                <MDBInput label={user.titre} id=\"un\" type=\"text\" className=\"input black-textform-control\" id=\"inputGroup-sizing-default\" name=\"titre\" value={this.state.value} onChange={this.handleChange} />\n                                                                                        <MDBInput label={user.description} id=\"ml\" type=\"textarea\" rows=\"2\" className=\"input black-text\" name=\"description\" value={this.state.value} onChange={this.handleChange} />\n                                                                                    </div>\n                                                                                    <div className='col-md-6'>\n                                                                                        <center>\n                                                                                            <input className='btn btn-dark' ref={(ref) => { this.uploadInput = ref; }} type=\"file\" name=\"image\" /><br />\n                                                                                            <input className='btn btn-dark' ref={(ref1) => { this.uploadInput1 = ref1; }} type=\"file\" name=\"image1\" /><br />\n                                                                                            <input className='btn btn-dark' ref={(ref2) => { this.uploadInput2 = ref2; }} type=\"file\" name=\"image2\" /><br />\n                                                                                            <MDBBtn className=\"button\" id=\"boutton\" onClick={() => {\n                                                                                                this.toggle()\n                                                                                                onClose()\n                                                                                            }}>Confirmer</MDBBtn>\n                                                                                            <button className=\"btn btn-dark\" onClick={onClose}>Annuler</button>\n                                                                                        </center>\n                                                                                    </div>\n                                                                                </div>\n                                                                            </MDBContainer>\n                                                                        </div>\n                                                                    </div>\n                                                                </div>\n                                                            </form>\n                                                        );\n                                                    }\n                                                })\n                                            }\n                                            }\n                                        >Edit</button>\n                                    </td>\n                                </tr>\n                            ))\n                        ) : (\n                                <tr>\n                                    <td colSpan={4}></td>\n                                </tr>\n                            )}\n                    </tbody>\n                </table>\n                {/* </center> */}\n\n\n\n                {/* \n\n             <div className='container'>\n              <div className='row'>\n                     {this.state.comment.length > 0 ? (this.state.comment.sort((a, b) => { return b._id - a._id }).map((article, _id) => (\n                            <div className='col-md-5 carte' key={_id}>\n                                <div className=\"card\">\n                                    <button onClick={this.toggle}><img class=\"card-img-top img-thumbnail\" src={\"http://localhost:8080/service/\" + article.image} alt={article.titre} /></button>\n                                    <div class=\"card-body\">\n                                        <center>\n                                            <h5 class=\"card-title\">{article.titre}</h5>\n                                            <p class=\"test\">{article.prix}</p>\n                                        </center>\n                                    </div>\n                                    <MDBContainer  key={_id}>\n                                        <MDBModal isOpen={this.state.modal}>\n                                            <MDBModalHeader>{this.props.titre}</MDBModalHeader>\n                                            <MDBModalBody>\n                                                <center>\n                                                    <img class=\"card-img-top img-thumbnail\" src={\"http://localhost:8080/service/\" + article.image} alt={article.titre} />\n                                                    <p>{article.description}</p>\n                                                    <p>{article.prix}</p>\n                                                </center>\n                                            </MDBModalBody>\n                                            <MDBModalFooter>\n                                                <MDBBtn color=\"secondary\" onClick={() => { this.toggle() }}>Close</MDBBtn>\n                                            </MDBModalFooter>\n                                        </MDBModal>\n                                    </MDBContainer>\n                                </div>\n                                <br />\n                            </div>\n                    )\n                    )) : ''}\n                </div>\n            </div> */}\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        listeArticle: state\n    }\n}\n\nexport default connect(mapStateToProps)(Article)"]},"metadata":{},"sourceType":"module"}