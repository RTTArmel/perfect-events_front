{"ast":null,"code":"var _jsxFileName = \"/home/dev/Bureau/Armel/Perfect/Local/front/src/components/topNavigation.js\";\nimport React, { Component } from 'react';\nimport { MDBNavbar, MDBNavbarBrand, MDBNavbarNav, MDBNavbarToggler, MDBCollapse, MDBNavItem, MDBNavLink, MDBIcon } from 'mdbreact';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\n\nclass TopNavigation extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      collapse: true\n    };\n\n    this.renderRedirect = () => {\n      if (localStorage.getItem('login') == 'false') {\n        return React.createElement(Redirect, {\n          to: \"/login\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 19\n          },\n          __self: this\n        });\n      } else {\n        console.log('test');\n      }\n    };\n\n    this.onClick = () => {\n      this.setState({\n        collapse: !this.state.collapse\n      });\n    };\n\n    this.toggle = () => {\n      this.setState({\n        dropdownOpen: !this.state.dropdownOpen\n      });\n    };\n\n    this.deconnection = this.deconnection.bind(this);\n    this.renderRedirect = this.renderRedirect.bind(this);\n  }\n\n  deconnection(e) {\n    console.log('local deconnection: ', localStorage.getItem('login'));\n    const action = {\n      type: \"DECONNECT\",\n      value: e\n    };\n    this.props.dispatch(action);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"container-fluid topbar-fixed\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(MDBNavbar, {\n      id: \"Totalhome\",\n      color: \"bg-primary\",\n      dark: true,\n      expand: \"md\",\n      scrolling: true,\n      className: \"position-fixed\",\n      style: {\n        position: 'absolute',\n        zIndex: '1000',\n        float: 'left',\n        width: '103.2%',\n        marginLeft: '-3%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(MDBNavbarBrand, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, this.renderRedirect(), React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"Bonjour \", localStorage.getItem('user'))), React.createElement(MDBNavbarToggler, {\n      image: \"../images/hamburger3.gif\",\n      onClick: this.onClick(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }), React.createElement(MDBCollapse, {\n      id: \"navbarCollapse\",\n      isOpen: this.state.collapse,\n      navbar: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(MDBNavbarNav, {\n      right: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(MDBNavItem, {\n      className: \"item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(MDBNavLink, {\n      to: \"/login\",\n      className: \"accueil\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"Connexion\"))))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    client: state\n  };\n};\n\nexport default connect(mapStateToProps)(TopNavigation);","map":{"version":3,"sources":["/home/dev/Bureau/Armel/Perfect/Local/front/src/components/topNavigation.js"],"names":["React","Component","MDBNavbar","MDBNavbarBrand","MDBNavbarNav","MDBNavbarToggler","MDBCollapse","MDBNavItem","MDBNavLink","MDBIcon","connect","Redirect","TopNavigation","constructor","props","state","collapse","renderRedirect","localStorage","getItem","console","log","onClick","setState","toggle","dropdownOpen","deconnection","bind","e","action","type","value","dispatch","render","position","zIndex","float","width","marginLeft","mapStateToProps","client"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { MDBNavbar, MDBNavbarBrand, MDBNavbarNav, MDBNavbarToggler, MDBCollapse, MDBNavItem, MDBNavLink, MDBIcon } from 'mdbreact';\nimport { connect } from 'react-redux'\nimport { Redirect } from 'react-router-dom'\n\nclass TopNavigation extends Component {\n\n    constructor(props) {\n        super(props);\n        this.deconnection = this.deconnection.bind(this)\n        this.renderRedirect = this.renderRedirect.bind(this)\n    }\n    state = {\n        collapse: true\n    }\n\n    renderRedirect = () => {\n        if (localStorage.getItem('login') == 'false') {\n            return <Redirect to='/login' />\n        } else {\n            console.log('test');\n        }\n    }\n\n    deconnection(e) {\n        console.log('local deconnection: ', localStorage.getItem('login'));\n        const action = { type: \"DECONNECT\", value: e }\n        this.props.dispatch(action)\n    }\n\n    onClick = () => {\n        this.setState({\n            collapse: !this.state.collapse,\n        });\n    }\n\n    toggle = () => {\n        this.setState({\n            dropdownOpen: !this.state.dropdownOpen\n        });\n    }\n\n    render() {\n        return (\n            <div className='container-fluid topbar-fixed'>\n                {/* <MDBNavbar className=\"flexible-navbar\" light expand=\"md\" scrolling>\n                <MDBNavbarBrand>\n                    {this.renderRedirect()}\n                    <strong>Bonjour {localStorage.getItem('user')}</strong>\n                </MDBNavbarBrand>\n                <MDBNavbarToggler onClick={this.onClick} />\n                <MDBCollapse isOpen={this.state.collapse} navbar>\n                    \n                    <MDBNavbarNav right>\n                        <MDBNavItem onClick={() => {this.deconnection()}}>\n                            <MDBNavLink rel=\"noopener noreferrer\" className=\"nav-link Ripple-parent\" href=\"/login\">Deconnexion</MDBNavLink>\n                        </MDBNavItem>\n                    </MDBNavbarNav>\n                </MDBCollapse>\n            </MDBNavbar> */}\n\n                <MDBNavbar id=\"Totalhome\"\n                    color=\"bg-primary\"\n                    dark\n                    expand=\"md\"\n                    scrolling\n                    className='position-fixed'\n                    style={{ position: 'absolute', zIndex: '1000', float: 'left', width: '103.2%', marginLeft: '-3%' }}\n                >\n\n                    <MDBNavbarBrand>\n                        {this.renderRedirect()}\n                        <strong>Bonjour {localStorage.getItem('user')}</strong>\n                    </MDBNavbarBrand>\n                    <MDBNavbarToggler\n                        image=\"../images/hamburger3.gif\"\n                        onClick={this.onClick()}\n                    />\n                    <MDBCollapse\n                        id=\"navbarCollapse\"\n                        isOpen={this.state.collapse}\n                        navbar\n                    >\n\n                        <MDBNavbarNav right>\n                            <MDBNavItem className='item'>\n                                <MDBNavLink to=\"/login\" className=\"accueil\">Connexion</MDBNavLink>\n                            </MDBNavItem>\n\n                        </MDBNavbarNav>\n                    </MDBCollapse>\n\n                </MDBNavbar>\n            </div>\n        );\n    }\n}\nconst mapStateToProps = (state) => {\n    return {\n        client: state\n    }\n}\nexport default connect(mapStateToProps)(TopNavigation);"]},"metadata":{},"sourceType":"module"}